version: '3.8'

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    hostname: namenode
    environment:
      - CLUSTER_NAME=hadoop-cluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    ports:
      - "9870:9870"
      - "8020:8020"
    volumes:
      - hdfs_namenode:/hadoop/dfs/name
      - ./data:/data
    networks:
      - hadoop-net

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    hostname: datanode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - SERVICE_PRECONDITION=namenode:9870
    ports:
      - "9864:9864"
    volumes:
      - hdfs_datanode:/hadoop/dfs/data
      - ./data:/data
    depends_on:
      - namenode
    networks:
      - hadoop-net

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    ports:
      - "8088:8088"
      - "8031:8031"
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - YARN_CONF_yarn_resourcemanager_hostname=resourcemanager
      - YARN_CONF_yarn_resourcemanager_address=resourcemanager:8032
      - YARN_CONF_yarn_resourcemanager_scheduler_address=resourcemanager:8030
      - YARN_CONF_yarn_resourcemanager_resource__tracker_address=resourcemanager:8031
      - YARN_CONF_yarn_timeline___service_enabled=true
    depends_on:
      - namenode
    networks:
      - hadoop-net

  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - YARN_CONF_yarn_resourcemanager_hostname=resourcemanager
      - YARN_CONF_yarn_nodemanager_pmem___check___enabled=false
      - YARN_CONF_yarn_nodemanager_vmem___check___enabled=false
      - YARN_CONF_yarn_nodemanager_resource_memory___mb=8192
      - YARN_CONF_yarn_nodemanager_resource_cpu___vcores=4
    depends_on:
      - resourcemanager
    networks:
      - hadoop-net

  postgres-metastore:
    image: postgres:12.3
    container_name: postgres-metastore
    hostname: postgres-metastore
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=hive
      - POSTGRES_USER=hive
      - POSTGRES_PASSWORD=hive
    volumes:
      - postgres-metastore-data:/var/lib/postgresql/data
    networks:
      - hadoop-net

  spark-master:
    image: bitnami/spark:3.5.1
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "7077:7077"
      - "8080:8080"
    volumes:
      - ./scripts:/scripts
      - ./data:/data
    networks:
      - hadoop-net

  spark-worker:
    image: bitnami/spark:3.5.1
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2G
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    volumes:
      - ./scripts:/scripts
      - ./data:/data
    networks:
      - hadoop-net

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    hostname: hive-server
    environment:
      - HIVE_METASTORE_DB_TYPE=postgresql
      - HIVE_METASTORE_DB_HOST=postgres-metastore
      - HIVE_METASTORE_DB_PORT=5432
      - HIVE_METASTORE_DB_NAME=hive
      - HIVE_METASTORE_DB_USER=hive
      - HIVE_METASTORE_DB_PASSWORD=hive
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    ports:
      - "10000:10000"
    depends_on:
      - hive-metastore
    volumes:
      - ./postgresql-42.2.5.jar:/opt/hive/lib/postgresql-42.2.5.jar
      - ./data:/data
    networks:
      - hadoop-net

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    hostname: hive-metastore
    environment:
      - HIVE_METASTORE_DB_TYPE=postgresql
      - HIVE_METASTORE_DB_HOST=postgres-metastore
      - HIVE_METASTORE_DB_PORT=5432
      - HIVE_METASTORE_DB_NAME=hive
      - HIVE_METASTORE_DB_USER=hive
      - HIVE_METASTORE_DB_PASSWORD=hive
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    depends_on:
      - postgres-metastore
    volumes:
      - ./postgresql-42.2.5.jar:/opt/hive/lib/postgresql-42.2.5.jar
      - ./data:/data
    networks:
      - hadoop-net

  superset:
    image: apache/superset:latest
    container_name: superset
    ports:
      - "8083:8088"               # Host 8083 â†’ Container 8088 (default superset port)
    environment:
      - SUPERSET_SECRET_KEY=323213231rfacfq3rqcfR3R12W
      - SUPERSET_ENV=production
      - ADMIN_USERNAME=naufal       # Ganti username Superset di sini
      - ADMIN_PASSWORD=naufalfakhri # Ganti password Superset di sini
      - ADMIN_EMAIL=admin@example.com
    volumes:
      - superset_home:/app/superset_home
    depends_on:
      - hive-server
    networks:
      - hadoop-net
    restart: unless-stopped

  airflow-postgres:
    image: postgres:12
    container_name: airflow-postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - airflow-db-volume:/var/lib/postgresql/data
    networks:
      - hadoop-net

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    image: custom-airflow-image:2.8.1-spark
    container_name: airflow-init
    depends_on:
      - airflow-postgres
    environment:
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
      - AIRFLOW_UID=50000
      - AIRFLOW_GID=50000
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./data:/data
      - ./logs:/opt/airflow/logs
    networks:
      - hadoop-net
    restart: "no"
    command: >
      bash -c "airflow db migrate && airflow users create --username naufal --password naufal --firstname Naufal --lastname Fakhri --role Admin --email naufal@example.com || true"

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    image: custom-airflow-image:2.8.1-spark
    container_name: airflow-webserver
    restart: "no"
    ports:
      - "8089:8080"
    environment:
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__WEBSERVER__RBAC=True
      - AIRFLOW_UID=50000
      - AIRFLOW_GID=50000
      - SPARK_HOME=/opt/spark
      - HADOOP_HOME=/opt/hadoop
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/spark/bin:/opt/hadoop/bin:/opt/hadoop/sbin
      - JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
      - HADOOP_CONF_DIR=/etc/hadoop/conf
      - YARN_CONF_DIR=/etc/hadoop/conf
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./data:/data
      - ./logs:/opt/airflow/logs
    depends_on:
      - airflow-postgres
      - airflow-init
      - spark-master
      - hive-server
      - superset
    networks:
      - hadoop-net
    command: webserver

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    image: custom-airflow-image:2.8.1-spark
    container_name: airflow-scheduler
    restart: "no"
    environment:
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__WEBSERVER__RBAC=True
      - AIRFLOW_UID=50000
      - AIRFLOW_GID=50000
      - SPARK_HOME=/opt/spark
      - HADOOP_HOME=/opt/hadoop
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/spark/bin:/opt/hadoop/bin:/opt/hadoop/sbin
      - JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
      - HADOOP_CONF_DIR=/etc/hadoop/conf
      - YARN_CONF_DIR=/etc/hadoop/conf
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./data:/data
      - ./logs:/opt/airflow/logs
    depends_on:
      - airflow-postgres
      - airflow-webserver
      - airflow-init
      - spark-master
      - hive-server
    networks:
      - hadoop-net
    command: scheduler

volumes:
  hdfs_namenode:
  hdfs_datanode:
  superset_home:
  postgres-metastore-data:
  airflow-db-volume:

networks:
  hadoop-net:
